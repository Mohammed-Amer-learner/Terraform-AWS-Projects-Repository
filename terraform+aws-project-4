#variables.tf
variable "availability_zone" {
  default = "us-east-1a"
}
variable "ami_id_value" {
  description = "EC2 ami id"
}
variable "instance_type_value" {
  default = "t2.micro"
}
variable "vpc_cidr_block" {
  default = "10.0.0.0/16"
}
variable "public_subnet_cidr" {
  default = "10.0.1.0/24"
}
variable "private_subnet_cidr" {
  default = "10.0.2.0/24"
}
variable "aws_key_pair" {
  default = "terra_project5"
}

resource "aws_vpc" "terra_project5" {
  cidr_block           = var.vpc_cidr_block
  enable_dns_support   = true
  enable_dns_hostnames = true
  tags = {
    Name = "bastion_host_vpc"
  }
}

resource "aws_subnet" "public" {
  vpc_id                  = aws_vpc.terra_project5.id
  cidr_block              = var.public_subnet_cidr
  availability_zone       = var.availability_zone
  map_public_ip_on_launch = true
  tags = {
    Name = "public_subnet"
  }
}

resource "aws_subnet" "private" {
  vpc_id            = aws_vpc.terra_project5.id
  cidr_block        = var.private_subnet_cidr
  availability_zone = var.availability_zone
  tags = {
    Name = "private_subnet"
  }
}

resource "aws_internet_gateway" "gateway" {
  vpc_id = aws_vpc.terra_project5.id
  tags = {
    Name = "main_internet_gateway"
  }
}

resource "aws_route_table" "public_rt" {
  vpc_id = aws_vpc.terra_project5.id
  tags = {
    Name = "public_route_table"
  }
}

resource "aws_route" "public_route" {
  route_table_id         = aws_route_table.public_rt.id
  destination_cidr_block = "0.0.0.0/0"
  gateway_id             = aws_internet_gateway.gateway.id
}

resource "aws_route_table_association" "public_association" {
  subnet_id      = aws_subnet.public.id
  route_table_id = aws_route_table.public_rt.id
}

resource "aws_security_group" "bastion_sg" {
  name        = "bastion_sg"
  description = "Security group for Bastion host"
  vpc_id      = aws_vpc.terra_project5.id

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_security_group" "private_sg" {
  name        = "private_sg"
  description = "Security group for Private Instances"
  vpc_id      = aws_vpc.terra_project5.id

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    security_groups = [aws_security_group.bastion_sg.id]
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_instance" "bastion" {
  ami                    = var.ami_id_value
  instance_type          = var.instance_type_value
  subnet_id              = aws_subnet.public.id
  vpc_security_group_ids = [aws_security_group.bastion_sg.id]
  key_name               = var.aws_key_pair

  tags = {
    Name = "Bastion Host"
  }
}

resource "aws_instance" "private_instance" {
  ami                    = var.ami_id_value
  instance_type          = var.instance_type_value
  subnet_id              = aws_subnet.private.id
  vpc_security_group_ids = [aws_security_group.private_sg.id]
  key_name               = var.aws_key_pair

  tags = {
    Name = "Private Instance"
  }
}

#terraform.tfvars
ami_id_value = "ami-xyz"
instance_type_value = "t2.micro"

#outputs.tf
output "bastion_public_ip" {
  value = aws_instance.bastion.public_ip
}
